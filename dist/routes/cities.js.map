{"version":3,"sources":["../../src/routes/cities.js"],"names":["router","route","get","res","req","next","search","index","elasticsearch","type","size","cities","json","catch"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAAS,sBAAf;;AAEAA,OACGC,KADH,CACS,GADT,EAEGC,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvB,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACsB,wBAAcC,MAAd,CAAqB;AACxCC,qBAAO,iBAAOC,aAAP,CAAqBD,KADY;AAExCE,oBAAM,MAFkC;AAGxCC,oBAAM;AAHkC,aAArB,CADtB;;AAAA;AACOC,kBADP;AAAA,6CAMQR,IAAIS,IAAJ,CAAS;AACdD;AADc,aAAT,CANR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,KASKE,KATL,CASWR,IATX;AAUD,CAbH;;kBAeeL,M","file":"cities.js","sourcesContent":["import config from 'config';\nimport { Router } from 'express';\nimport elasticsearch from 'elasticsearch';\n\nconst router = Router();\n\nrouter\n  .route('/')\n  .get((res, req, next) => {\n    (async () => {\n      const cities = await elasticsearch.search({\n        index: config.elasticsearch.index,\n        type: 'city',\n        size: 1000\n      });\n      return res.json({\n        cities\n      });\n    })().catch(next);\n  });\n\nexport default router;\n"]}